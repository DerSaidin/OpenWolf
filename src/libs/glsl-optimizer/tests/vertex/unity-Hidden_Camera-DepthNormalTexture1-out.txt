uniform vec4 _WaveAndDistance;
uniform vec4 _ProjectionParams;
void main ()
{
  vec4 tmpvar_1;
  vec4 vertex;
  vertex = gl_Vertex;
  vec3 waveMove;
  waveMove = vec3(0.0, 0.0, 0.0);
  vec4 tmpvar_2;
  tmpvar_2 = ((fract ((((gl_Vertex.x * (vec4(0.012, 0.02, 0.06, 0.024) * _WaveAndDistance.y)) + (gl_Vertex.z * (vec4(0.006, 0.02, 0.02, 0.05) * _WaveAndDistance.y))) + (_WaveAndDistance.x * vec4(1.2, 2.0, 1.6, 4.8)))) * 6.40885) - 3.14159);
  vec4 tmpvar_3;
  tmpvar_3 = (tmpvar_2 * tmpvar_2);
  vec4 tmpvar_4;
  tmpvar_4 = (tmpvar_3 * tmpvar_2);
  vec4 tmpvar_5;
  tmpvar_5 = (tmpvar_4 * tmpvar_3);
  vec4 tmpvar_6;
  tmpvar_6 = (((tmpvar_2 + (tmpvar_4 * -0.161616)) + (tmpvar_5 * 0.0083333)) + ((tmpvar_5 * tmpvar_3) * -0.00019841));
  vec4 tmpvar_7;
  tmpvar_7 = (tmpvar_6 * tmpvar_6);
  vec4 tmpvar_8;
  tmpvar_8 = ((tmpvar_7 * tmpvar_7) * (gl_Color.w * _WaveAndDistance.z));
  waveMove.x = dot (tmpvar_8, vec4(0.024, 0.04, -0.12, 0.096));
  waveMove.z = dot (tmpvar_8, vec4(0.006, 0.02, -0.02, 0.1));
  vertex.xz = (gl_Vertex.xz - (waveMove.xz * _WaveAndDistance.z));
  tmpvar_1.xyz = vec3(0.0, 0.0, 1.0);
  tmpvar_1.w = -(((gl_ModelViewMatrix * vertex).z * _ProjectionParams.w));
  gl_Position = (gl_ModelViewProjectionMatrix * vertex);
  vec4 tmpvar_9;
  tmpvar_9.zw = vec2(0.0, 0.0);
  tmpvar_9.xy = gl_MultiTexCoord0.xy;
  gl_TexCoord[0] = tmpvar_9;
  gl_TexCoord[1] = tmpvar_1;
}

