uniform vec4 unity_Ambient;
uniform vec4 _ReflectColor;
uniform sampler2D _ParallaxMap;
uniform float _Parallax;
uniform sampler2D _MainTex;
uniform sampler2D _LightBuffer;
uniform samplerCube _Cube;
uniform vec4 _Color;
uniform sampler2D _BumpMap;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1 = gl_TexCoord[0];
  vec4 tmpvar_2;
  tmpvar_2 = gl_TexCoord[3];
  vec4 tmpvar_3;
  tmpvar_3 = gl_TexCoord[4];
  vec4 tmpvar_4;
  tmpvar_4 = gl_TexCoord[5];
  vec4 col;
  vec4 light;
  vec3 tmpvar_5;
  tmpvar_5.x = tmpvar_2.w;
  tmpvar_5.y = tmpvar_3.w;
  tmpvar_5.z = tmpvar_4.w;
  vec2 tmpvar_6;
  vec3 v;
  vec3 tmpvar_7;
  tmpvar_7 = normalize (gl_TexCoord[1].xyz);
  v = tmpvar_7;
  v.z = (tmpvar_7.z + 0.42);
  tmpvar_6 = (((texture2D (_ParallaxMap, tmpvar_1.zw).w * _Parallax) - (_Parallax / 2.0)) * (tmpvar_7.xy / v.z));
  vec4 tmpvar_8;
  tmpvar_8 = texture2D (_MainTex, (tmpvar_1.xy + tmpvar_6));
  vec4 normal;
  normal.xy = ((texture2D (_BumpMap, (tmpvar_1.zw + tmpvar_6)).wy * 2.0) - 1.0);
  normal.z = sqrt (((1.0 - (normal.x * normal.x)) - (normal.y * normal.y)));
  vec3 tmpvar_9;
  tmpvar_9 = normal.xyz;
  vec3 tmpvar_10;
  tmpvar_10.x = dot (tmpvar_2.xyz, tmpvar_9);
  tmpvar_10.y = dot (tmpvar_3.xyz, tmpvar_9);
  tmpvar_10.z = dot (tmpvar_4.xyz, tmpvar_9);
  vec4 tmpvar_11;
  tmpvar_11 = (textureCube (_Cube, reflect (tmpvar_5, tmpvar_10)) * tmpvar_8.w);
  vec4 tmpvar_12;
  tmpvar_12 = -(log2 (texture2DProj (_LightBuffer, gl_TexCoord[2])));
  light = tmpvar_12;
  light.xyz = (tmpvar_12.xyz + unity_Ambient.xyz);
  vec4 c_i0;
  c_i0.xyz = ((tmpvar_8 * _Color).xyz * light.xyz);
  c_i0.w = (tmpvar_11.w * _ReflectColor.w);
  col = c_i0;
  col.xyz = (c_i0.xyz + (tmpvar_11.xyz * _ReflectColor.xyz));
  gl_FragData[0] = col;
}

