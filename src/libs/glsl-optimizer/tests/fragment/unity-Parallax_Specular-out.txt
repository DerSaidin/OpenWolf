uniform vec4 _SpecColor;
uniform float _Shininess;
uniform sampler2D _ParallaxMap;
uniform float _Parallax;
uniform sampler2D _MainTex;
uniform sampler2D _LightTextureB0;
uniform sampler2D _LightTexture0;
uniform vec4 _LightColor0;
uniform vec4 _Color;
uniform sampler2D _BumpMap;
void main ()
{
  vec4 tmpvar_1;
  tmpvar_1 = gl_TexCoord[0];
  vec3 tmpvar_2;
  tmpvar_2 = gl_TexCoord[1].xyz;
  vec4 tmpvar_3;
  tmpvar_3 = gl_TexCoord[3];
  vec4 c;
  vec2 tmpvar_4;
  vec3 v;
  vec3 tmpvar_5;
  tmpvar_5 = normalize (tmpvar_2);
  v = tmpvar_5;
  v.z = (tmpvar_5.z + 0.42);
  tmpvar_4 = (((texture2D (_ParallaxMap, tmpvar_1.zw).w * _Parallax) - (_Parallax / 2.0)) * (tmpvar_5.xy / v.z));
  vec4 tmpvar_6;
  tmpvar_6 = texture2D (_MainTex, (tmpvar_1.xy + tmpvar_4));
  vec4 normal;
  normal.xy = ((texture2D (_BumpMap, (tmpvar_1.zw + tmpvar_4)).wy * 2.0) - 1.0);
  normal.z = sqrt (((1.0 - (normal.x * normal.x)) - (normal.y * normal.y)));
  vec3 tmpvar_7;
  tmpvar_7 = normal.xyz;
  vec3 tmpvar_8;
  tmpvar_8 = normalize (gl_TexCoord[2].xyz);
  vec3 LightCoord_i0;
  LightCoord_i0 = tmpvar_3.xyz;
  float atten;
  atten = ((float((tmpvar_3.z > 0.0)) * texture2D (_LightTexture0, ((tmpvar_3.xy / tmpvar_3.w) + 0.5)).w) * texture2D (_LightTextureB0, vec2(dot (LightCoord_i0, LightCoord_i0))).w);
  vec4 c_i0;
  float tmpvar_9;
  tmpvar_9 = (pow (max (0.0, dot (tmpvar_7, normalize ((tmpvar_8 + normalize (tmpvar_2))))), (_Shininess * 128.0)) * tmpvar_6.w);
  c_i0.xyz = (((((tmpvar_6.xyz * _Color.xyz) * _LightColor0.xyz) * max (0.0, dot (tmpvar_7, tmpvar_8))) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_9)) * (atten * 2.0));
  c_i0.w = ((tmpvar_6.w * _Color.w) + (((_LightColor0.w * _SpecColor.w) * tmpvar_9) * atten));
  c = c_i0;
  c.w = 0.0;
  gl_FragData[0] = c;
}

