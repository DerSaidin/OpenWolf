struct SurfaceOutput {
  vec3 Albedo;
  vec3 Normal;
  vec3 Emission;
  float Specular;
  float Gloss;
  float Alpha;
};
struct Input {
  vec2 uv_MainTex;
  vec2 uv_BumpMap;
  vec3 worldRefl;
  vec3 TtoW0;
  vec3 TtoW1;
  vec3 TtoW2;
};
struct v2f_surf {
  vec4 pos;
  float fog;
  vec4 hip_pack0;
  vec4 hip_screen;
  vec4 TtoW0;
  vec4 TtoW1;
  vec4 TtoW2;
  vec3 hip_lmapFade;
};
varying vec4 xlv_FOG;
uniform sampler2D unity_LightmapInd;
uniform sampler2D unity_Lightmap;
uniform vec4 _ReflectColor;
uniform sampler2D _MainTex;
uniform sampler2D _LightBuffer;
uniform samplerCube _Cube;
uniform vec4 _Color;
uniform sampler2D _BumpMap;
float xll_saturate (
  in float x
)
{
  float tmpvar_1;
  tmpvar_1 = clamp (x, 0.0, 1.0);
  return tmpvar_1;
}

vec2 xll_saturate (
  in vec2 x
)
{
  vec2 tmpvar_1;
  tmpvar_1 = clamp (x, 0.0, 1.0);
  return tmpvar_1;
}

vec3 xll_saturate (
  in vec3 x
)
{
  vec3 tmpvar_1;
  tmpvar_1 = clamp (x, 0.0, 1.0);
  return tmpvar_1;
}

vec4 xll_saturate (
  in vec4 x
)
{
  vec4 tmpvar_1;
  tmpvar_1 = clamp (x, 0.0, 1.0);
  return tmpvar_1;
}

mat2 xll_saturate (
  in mat2 m
)
{
  vec2 tmpvar_1;
  tmpvar_1 = clamp (m[0], 0.0, 1.0);
  vec2 tmpvar_2;
  tmpvar_2 = clamp (m[1], 0.0, 1.0);
  mat2 tmpvar_3;
  vec2 tmpvar_4;
  tmpvar_4 = tmpvar_1;
  tmpvar_3[0] = tmpvar_4;
  vec2 tmpvar_5;
  tmpvar_5 = tmpvar_2;
  tmpvar_3[1] = tmpvar_5;
  return tmpvar_3;
}

mat3 xll_saturate (
  in mat3 m
)
{
  vec3 tmpvar_1;
  tmpvar_1 = clamp (m[0], 0.0, 1.0);
  vec3 tmpvar_2;
  tmpvar_2 = clamp (m[1], 0.0, 1.0);
  vec3 tmpvar_3;
  tmpvar_3 = clamp (m[2], 0.0, 1.0);
  mat3 tmpvar_4;
  vec3 tmpvar_5;
  tmpvar_5 = tmpvar_1;
  tmpvar_4[0] = tmpvar_5;
  vec3 tmpvar_6;
  tmpvar_6 = tmpvar_2;
  tmpvar_4[1] = tmpvar_6;
  vec3 tmpvar_7;
  tmpvar_7 = tmpvar_3;
  tmpvar_4[2] = tmpvar_7;
  return tmpvar_4;
}

mat4 xll_saturate (
  in mat4 m
)
{
  vec4 tmpvar_1;
  tmpvar_1 = clamp (m[0], 0.0, 1.0);
  vec4 tmpvar_2;
  tmpvar_2 = clamp (m[1], 0.0, 1.0);
  vec4 tmpvar_3;
  tmpvar_3 = clamp (m[2], 0.0, 1.0);
  vec4 tmpvar_4;
  tmpvar_4 = clamp (m[3], 0.0, 1.0);
  mat4 tmpvar_5;
  vec4 tmpvar_6;
  tmpvar_6 = tmpvar_1;
  tmpvar_5[0] = tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = tmpvar_2;
  tmpvar_5[1] = tmpvar_7;
  vec4 tmpvar_8;
  tmpvar_8 = tmpvar_3;
  tmpvar_5[2] = tmpvar_8;
  vec4 tmpvar_9;
  tmpvar_9 = tmpvar_4;
  tmpvar_5[3] = tmpvar_9;
  return tmpvar_5;
}

vec4 UnpackNormal (
  in vec4 packednormal
)
{
  vec4 normal;
  vec2 tmpvar_1;
  tmpvar_1 = ((packednormal.wy * 2.0) - 1.0);
  normal.xy = tmpvar_1.xy.xy;
  float tmpvar_2;
  tmpvar_2 = sqrt (((1.0 - (normal.x * normal.x)) - (normal.y * normal.y)));
  float tmpvar_3;
  tmpvar_3 = tmpvar_2;
  normal.z = vec3(tmpvar_3).z;
  return normal;
}

void surf (
  in Input IN,
  inout SurfaceOutput o
)
{
  vec4 reflcol;
  vec3 worldRefl;
  vec4 c;
  vec4 tex;
  vec4 tmpvar_1;
  tmpvar_1 = texture2D (_MainTex, IN.uv_MainTex);
  vec4 tmpvar_2;
  tmpvar_2 = tmpvar_1;
  tex = tmpvar_2;
  vec4 tmpvar_3;
  tmpvar_3 = (tex * _Color);
  c = tmpvar_3;
  vec3 tmpvar_4;
  tmpvar_4 = c.xyz;
  o.Albedo = tmpvar_4;
  vec4 tmpvar_5;
  tmpvar_5 = texture2D (_BumpMap, IN.uv_BumpMap);
  vec4 tmpvar_6;
  tmpvar_6 = UnpackNormal (tmpvar_5);
  vec3 tmpvar_7;
  tmpvar_7 = tmpvar_6.xyz;
  vec3 tmpvar_8;
  tmpvar_8 = tmpvar_7;
  o.Normal = tmpvar_8;
  float tmpvar_9;
  tmpvar_9 = dot (IN.TtoW0, o.Normal);
  float tmpvar_10;
  tmpvar_10 = dot (IN.TtoW1, o.Normal);
  float tmpvar_11;
  tmpvar_11 = dot (IN.TtoW2, o.Normal);
  vec3 tmpvar_12;
  tmpvar_12.x = tmpvar_9;
  tmpvar_12.y = tmpvar_10;
  tmpvar_12.z = tmpvar_11;
  vec3 tmpvar_13;
  tmpvar_13 = reflect (IN.worldRefl, tmpvar_12);
  vec3 tmpvar_14;
  tmpvar_14 = tmpvar_13;
  worldRefl = tmpvar_14;
  vec4 tmpvar_15;
  tmpvar_15 = textureCube (_Cube, worldRefl);
  vec4 tmpvar_16;
  tmpvar_16 = tmpvar_15;
  reflcol = tmpvar_16;
  vec4 tmpvar_17;
  tmpvar_17 = (reflcol * tex.w);
  reflcol = tmpvar_17;
  vec3 tmpvar_18;
  tmpvar_18 = (reflcol.xyz * _ReflectColor.xyz);
  o.Emission = tmpvar_18;
  float tmpvar_19;
  tmpvar_19 = (reflcol.w * _ReflectColor.w);
  o.Alpha = tmpvar_19;
}

vec4 LightingLambert_PrePass (
  in SurfaceOutput s,
  in vec4 light
)
{
  vec4 c;
  vec3 tmpvar_1;
  tmpvar_1 = (s.Albedo * light.xyz);
  c.xyz = tmpvar_1.xyz.xyz;
  float tmpvar_2;
  tmpvar_2 = s.Alpha;
  c.w = vec4(tmpvar_2).w;
  return c;
}

vec3 DecodeLightmap (
  in vec4 color
)
{
  return (2.0 * color.xyz);
}

vec4 frag_surf (
  in v2f_surf IN
)
{
  vec4 col;
  vec3 lm;
  vec3 lmIndirect;
  vec3 lmFull;
  vec4 light;
  SurfaceOutput o;
  Input surfIN;
  vec2 tmpvar_1;
  tmpvar_1 = IN.hip_pack0.xy;
  surfIN.uv_MainTex = tmpvar_1;
  vec2 tmpvar_2;
  tmpvar_2 = IN.hip_pack0.zw;
  surfIN.uv_BumpMap = tmpvar_2;
  vec3 tmpvar_3;
  tmpvar_3.x = IN.TtoW0.w;
  tmpvar_3.y = IN.TtoW1.w;
  tmpvar_3.z = IN.TtoW2.w;
  vec3 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  surfIN.worldRefl = tmpvar_4;
  vec3 tmpvar_5;
  tmpvar_5 = IN.TtoW0.xyz;
  surfIN.TtoW0 = tmpvar_5;
  vec3 tmpvar_6;
  tmpvar_6 = IN.TtoW1.xyz;
  surfIN.TtoW1 = tmpvar_6;
  vec3 tmpvar_7;
  tmpvar_7 = IN.TtoW2.xyz;
  surfIN.TtoW2 = tmpvar_7;
  vec3 tmpvar_8;
  tmpvar_8 = vec3(0.0, 0.0, 0.0);
  o.Albedo = tmpvar_8;
  vec3 tmpvar_9;
  tmpvar_9 = vec3(0.0, 0.0, 0.0);
  o.Emission = tmpvar_9;
  float tmpvar_10;
  tmpvar_10 = 0.0;
  o.Specular = tmpvar_10;
  float tmpvar_11;
  tmpvar_11 = 0.0;
  o.Alpha = tmpvar_11;
  float tmpvar_12;
  tmpvar_12 = 0.0;
  o.Gloss = tmpvar_12;
  surf (surfIN, o);
  vec4 tmpvar_13;
  tmpvar_13 = texture2DProj (_LightBuffer, IN.hip_screen);
  vec4 tmpvar_14;
  tmpvar_14 = tmpvar_13;
  light = tmpvar_14;
  vec4 tmpvar_15;
  tmpvar_15 = log2 (light);
  vec4 tmpvar_16;
  tmpvar_16 = -(tmpvar_15);
  light = tmpvar_16;
  vec4 tmpvar_17;
  tmpvar_17 = texture2D (unity_Lightmap, IN.hip_lmapFade.xy);
  vec3 tmpvar_18;
  tmpvar_18 = DecodeLightmap (tmpvar_17);
  vec3 tmpvar_19;
  tmpvar_19 = tmpvar_18;
  lmFull = tmpvar_19;
  vec4 tmpvar_20;
  tmpvar_20 = texture2D (unity_LightmapInd, IN.hip_lmapFade.xy);
  vec3 tmpvar_21;
  tmpvar_21 = DecodeLightmap (tmpvar_20);
  vec3 tmpvar_22;
  tmpvar_22 = tmpvar_21;
  lmIndirect = tmpvar_22;
  float tmpvar_23;
  tmpvar_23 = xll_saturate (IN.hip_lmapFade.z);
  vec3 tmpvar_24;
  tmpvar_24 = vec3(tmpvar_23);
  vec3 tmpvar_25;
  tmpvar_25 = mix (lmIndirect, lmFull, tmpvar_24);
  vec3 tmpvar_26;
  tmpvar_26 = tmpvar_25;
  lm = tmpvar_26;
  vec3 tmpvar_27;
  tmpvar_27 = (light.xyz + lm);
  light.xyz = tmpvar_27.xyz.xyz;
  vec4 tmpvar_28;
  tmpvar_28 = LightingLambert_PrePass (o, light);
  vec4 tmpvar_29;
  tmpvar_29 = tmpvar_28;
  col = tmpvar_29;
  vec3 tmpvar_30;
  tmpvar_30 = (col.xyz + o.Emission);
  col.xyz = tmpvar_30.xyz.xyz;
  return col;
}

void main ()
{
  v2f_surf xlt_IN;
  vec4 xl_retval;
  vec4 tmpvar_1;
  tmpvar_1 = vec4(0.0, 0.0, 0.0, 0.0);
  xlt_IN.pos = tmpvar_1;
  float tmpvar_2;
  tmpvar_2 = xlv_FOG.x;
  xlt_IN.fog = tmpvar_2;
  vec4 tmpvar_3;
  tmpvar_3 = gl_TexCoord[0].xyzw;
  vec4 tmpvar_4;
  tmpvar_4 = tmpvar_3;
  xlt_IN.hip_pack0 = tmpvar_4;
  vec4 tmpvar_5;
  tmpvar_5 = gl_TexCoord[1].xyzw;
  vec4 tmpvar_6;
  tmpvar_6 = tmpvar_5;
  xlt_IN.hip_screen = tmpvar_6;
  vec4 tmpvar_7;
  tmpvar_7 = gl_TexCoord[2].xyzw;
  vec4 tmpvar_8;
  tmpvar_8 = tmpvar_7;
  xlt_IN.TtoW0 = tmpvar_8;
  vec4 tmpvar_9;
  tmpvar_9 = gl_TexCoord[3].xyzw;
  vec4 tmpvar_10;
  tmpvar_10 = tmpvar_9;
  xlt_IN.TtoW1 = tmpvar_10;
  vec4 tmpvar_11;
  tmpvar_11 = gl_TexCoord[4].xyzw;
  vec4 tmpvar_12;
  tmpvar_12 = tmpvar_11;
  xlt_IN.TtoW2 = tmpvar_12;
  vec3 tmpvar_13;
  tmpvar_13 = gl_TexCoord[5].xyz;
  vec3 tmpvar_14;
  tmpvar_14 = tmpvar_13;
  xlt_IN.hip_lmapFade = tmpvar_14;
  vec4 tmpvar_15;
  tmpvar_15 = frag_surf (xlt_IN);
  vec4 tmpvar_16;
  tmpvar_16 = tmpvar_15;
  xl_retval = tmpvar_16;
  vec4 tmpvar_17;
  tmpvar_17 = xl_retval.xyzw;
  vec4 tmpvar_18;
  tmpvar_18 = tmpvar_17;
  gl_FragData[0] = tmpvar_18;
}

