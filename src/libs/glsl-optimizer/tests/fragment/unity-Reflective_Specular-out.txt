uniform vec4 _SpecColor;
uniform float _Shininess;
uniform vec4 _ReflectColor;
uniform sampler2D _MainTex;
uniform sampler2D _LightTextureB0;
uniform sampler2D _LightTexture0;
uniform vec4 _LightColor0;
uniform samplerCube _Cube;
uniform vec4 _Color;
void main ()
{
  vec3 tmpvar_1;
  tmpvar_1 = gl_TexCoord[1].xyz;
  vec4 tmpvar_2;
  tmpvar_2 = gl_TexCoord[4];
  vec4 c;
  vec3 tmpvar_3;
  vec4 tmpvar_4;
  tmpvar_4 = texture2D (_MainTex, gl_TexCoord[0].xy);
  vec3 tmpvar_5;
  tmpvar_5 = normalize (gl_TexCoord[2].xyz);
  vec3 LightCoord_i0;
  LightCoord_i0 = tmpvar_2.xyz;
  float atten;
  atten = ((float((tmpvar_2.z > 0.0)) * texture2D (_LightTexture0, ((tmpvar_2.xy / tmpvar_2.w) + 0.5)).w) * texture2D (_LightTextureB0, vec2(dot (LightCoord_i0, LightCoord_i0))).w);
  vec4 c_i0_i1;
  float tmpvar_6;
  tmpvar_6 = (pow (max (0.0, dot (tmpvar_1, normalize ((tmpvar_5 + normalize (gl_TexCoord[3].xyz))))), (_Shininess * 128.0)) * tmpvar_4.w);
  c_i0_i1.xyz = (((((tmpvar_4 * _Color).xyz * _LightColor0.xyz) * max (0.0, dot (tmpvar_1, tmpvar_5))) + ((_LightColor0.xyz * _SpecColor.xyz) * tmpvar_6)) * (atten * 2.0));
  c_i0_i1.w = (((textureCube (_Cube, tmpvar_3) * tmpvar_4.w).w * _ReflectColor.w) + (((_LightColor0.w * _SpecColor.w) * tmpvar_6) * atten));
  c = c_i0_i1;
  c.w = 0.0;
  gl_FragData[0] = c;
}

